{"version":3,"file":"static/js/805.f102319b.chunk.js","mappings":"uMAKA,MAiDA,EAjDyBA,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,MAAEC,IAAUC,EAAAA,EAAAA,KACZC,GAASC,EAAAA,EAAAA,MAAcD,QACtBE,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,MA8BnC,OA5BAC,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAS,IAAIC,gBAAgBP,GAC7BQ,EAAQF,EAAOG,IAAI,SACnBC,EAAOJ,EAAOG,IAAI,QAClBE,EAAOL,EAAOG,IAAI,SAAW,GAC7BG,EAAQN,EAAOG,IAAI,UAAY,GAC/BI,EAAQP,EAAOG,IAAI,UAAY,GAC/BK,EAAWR,EAAOG,IAAI,aAAe,GAEvCD,GAASE,GACXZ,EAAM,CAAEY,OAAMC,OAAMC,QAAOC,QAAOC,YAAYN,EAAO,MAErDL,EAAS,CAAEY,QAAS,0BAA2BC,KAAM,SAErDC,WAAW,KACTrB,EACW,YAATc,EAAqB,qBAAuB,wBAE7C,OAEHP,EAAS,CACPY,QAAS,qCACTC,KAAM,UAERC,WAAW,IAAMrB,EAAS,UAAW,QAEtC,CAACI,EAAQF,EAAOF,KAGjBsB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gDAA+CC,SAC3DlB,GACCgB,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CACJN,QAASb,EAAMa,QACfC,KAAMd,EAAMc,KACZM,QAASA,IAAMnB,EAAS,SAG1Be,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeC,SAAC,oB","sources":["pages/auth/OAuthSuccessPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport Toast from \"../../components/common/Toast\";\n\nconst OAuthSuccessPage = () => {\n  const navigate = useNavigate();\n  const { login } = useAuth();\n  const search = useLocation().search;\n  const [toast, setToast] = useState(null);\n\n  useEffect(() => {\n    const params = new URLSearchParams(search);\n    const token = params.get(\"token\");\n    const role = params.get(\"role\");\n    const name = params.get(\"name\") || \"\";\n    const email = params.get(\"email\") || \"\";\n    const photo = params.get(\"photo\") || \"\";\n    const provider = params.get(\"provider\") || \"\";\n\n    if (token && role) {\n      login({ role, name, email, photo, provider }, token, 3600);\n\n      setToast({ message: \"Logged in successfully!\", type: \"info\" });\n\n      setTimeout(() => {\n        navigate(\n          role === \"shipper\" ? \"/shipper/dashboard\" : \"/customer/dashboard\"\n        );\n      }, 1000);\n    } else {\n      setToast({\n        message: \"OAuth login failed. Redirecting...\",\n        type: \"error\",\n      });\n      setTimeout(() => navigate(\"/login\"), 1500);\n    }\n  }, [search, login, navigate]);\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      {toast ? (\n        <Toast\n          message={toast.message}\n          type={toast.type}\n          onClose={() => setToast(null)}\n        />\n      ) : (\n        <p className=\"text-gray-600\">Logging in...</p>\n      )}\n    </div>\n  );\n};\n\nexport default OAuthSuccessPage;\n"],"names":["OAuthSuccessPage","navigate","useNavigate","login","useAuth","search","useLocation","toast","setToast","useState","useEffect","params","URLSearchParams","token","get","role","name","email","photo","provider","message","type","setTimeout","_jsx","className","children","Toast","onClose"],"sourceRoot":""}