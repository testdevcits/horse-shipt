{"version":3,"file":"static/js/805.114b8ae4.chunk.js","mappings":"uMAKA,MAoFA,EApFyBA,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,MAAEC,IAAUC,EAAAA,EAAAA,KACZC,GAASC,EAAAA,EAAAA,MAAcD,QACtBE,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,MAiEnC,OA/DAC,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAS,IAAIC,gBAAgBP,GAG7BQ,EAAQF,EAAOG,IAAI,SACnBC,EAAOJ,EAAOG,IAAI,QAClBE,EAAML,EAAOG,IAAI,QAAU,GAC3BG,EAAON,EAAOG,IAAI,SAAW,GAC7BI,EAAQP,EAAOG,IAAI,UAAY,GAC/BK,EAAQR,EAAOG,IAAI,UAAY,GAC/BM,EAAWT,EAAOG,IAAI,aAAe,GACrCO,EAAaV,EAAOG,IAAI,eAAiB,GACzCQ,EAAYX,EAAOG,IAAI,cAAgB,GACvCS,EAAWZ,EAAOG,IAAI,aAAe,GACrCU,EAASb,EAAOG,IAAI,WAAa,GACjCW,EAAoC,SAA1Bd,EAAOG,IAAI,WACrBY,EAAsC,UAA3Bf,EAAOG,IAAI,YAE5B,GAAID,GAASE,EAAM,CACjB,MAAMY,EAAW,CACfX,MACAD,OACAE,OACAC,QACAC,QACAC,WACAC,aACAC,YACAC,WACAC,SACAC,UACAC,YAIIE,EAAW,CACfC,UAAWhB,EACXiB,SAAUH,EACVd,QACAkB,YAAaC,KAAKC,MAAQ,MAE5BC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUT,IAChDzB,EAAMwB,EAAUd,EAAO,MAGvBL,EAAS,CAAE8B,QAAS,0BAA2BC,KAAM,SAGrDC,WAAW,KACTvC,EACW,YAATc,EAAqB,qBAAuB,wBAE7C,IACL,MAEEP,EAAS,CACP8B,QAAS,qCACTC,KAAM,UAERC,WAAW,IAAMvC,EAAS,UAAW,OAEtC,CAACI,EAAQF,EAAOF,KAGjBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gDAA+CC,SAC3DpC,GACCkC,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CACJN,QAAS/B,EAAM+B,QACfC,KAAMhC,EAAMgC,KACZM,QAASA,IAAMrC,EAAS,SAG1BiC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeC,SAAC,oB","sources":["pages/auth/OAuthSuccessPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport Toast from \"../../components/common/Toast\";\n\nconst OAuthSuccessPage = () => {\n  const navigate = useNavigate();\n  const { login } = useAuth();\n  const search = useLocation().search;\n  const [toast, setToast] = useState(null);\n\n  useEffect(() => {\n    const params = new URLSearchParams(search);\n\n    // Extract user data from query params\n    const token = params.get(\"token\");\n    const role = params.get(\"role\");\n    const _id = params.get(\"_id\") || \"\";\n    const name = params.get(\"name\") || \"\";\n    const email = params.get(\"email\") || \"\";\n    const photo = params.get(\"photo\") || \"\";\n    const provider = params.get(\"provider\") || \"\";\n    const providerId = params.get(\"providerId\") || \"\";\n    const firstName = params.get(\"firstName\") || \"\";\n    const lastName = params.get(\"lastName\") || \"\";\n    const locale = params.get(\"locale\") || \"\";\n    const isLogin = params.get(\"isLogin\") === \"true\";\n    const isActive = params.get(\"isActive\") !== \"false\";\n\n    if (token && role) {\n      const userData = {\n        _id,\n        role,\n        name,\n        email,\n        photo,\n        provider,\n        providerId,\n        firstName,\n        lastName,\n        locale,\n        isLogin,\n        isActive,\n      };\n\n      // Store in context & localStorage\n      const authData = {\n        authToken: token,\n        authUser: userData,\n        token,\n        tokenExpiry: Date.now() + 3600 * 1000, // 1 hour\n      };\n      localStorage.setItem(\"authData\", JSON.stringify(authData));\n      login(userData, token, 3600);\n\n      // Show toast\n      setToast({ message: \"Logged in successfully!\", type: \"info\" });\n\n      // Redirect to dashboard after short delay\n      setTimeout(() => {\n        navigate(\n          role === \"shipper\" ? \"/shipper/dashboard\" : \"/customer/dashboard\"\n        );\n      }, 1000);\n    } else {\n      // Handle failed OAuth\n      setToast({\n        message: \"OAuth login failed. Redirecting...\",\n        type: \"error\",\n      });\n      setTimeout(() => navigate(\"/login\"), 1500);\n    }\n  }, [search, login, navigate]);\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      {toast ? (\n        <Toast\n          message={toast.message}\n          type={toast.type}\n          onClose={() => setToast(null)}\n        />\n      ) : (\n        <p className=\"text-gray-600\">Logging in...</p>\n      )}\n    </div>\n  );\n};\n\nexport default OAuthSuccessPage;\n"],"names":["OAuthSuccessPage","navigate","useNavigate","login","useAuth","search","useLocation","toast","setToast","useState","useEffect","params","URLSearchParams","token","get","role","_id","name","email","photo","provider","providerId","firstName","lastName","locale","isLogin","isActive","userData","authData","authToken","authUser","tokenExpiry","Date","now","localStorage","setItem","JSON","stringify","message","type","setTimeout","_jsx","className","children","Toast","onClose"],"sourceRoot":""}